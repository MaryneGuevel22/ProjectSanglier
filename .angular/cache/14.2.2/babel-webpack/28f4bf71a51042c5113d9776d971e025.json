{"ast":null,"code":"import _asyncToGenerator from \"/Users/guevel/ProjectSanglier/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, Input } from '@angular/core';\nlet ComponentListPatientComponent = class ComponentListPatientComponent {\n  constructor(patientService, rendezVousService) {\n    this.patientService = patientService;\n    this.rendezVousService = rendezVousService;\n    this.patients = [];\n    this.rdv = [];\n    this.otherPatient = {\n      'id': '632ac2df633beb221b834dd6',\n      'active': true,\n      'name': [{\n        'family': 'DUPONT',\n        'given': ['Pierre']\n      }],\n      'address': [{\n        'use': 'home',\n        'line': ['7 rue des petites écuries'],\n        'city': 'Paris',\n        'country': 'France'\n      }],\n      'gender': 'mâle'\n    };\n    this.patientChild = {\n      'id': '',\n      'active': true,\n      'name': [{\n        'family': '',\n        'given': ['']\n      }],\n      'address': [{\n        'use': '',\n        'line': [''],\n        'city': '',\n        'country': ''\n      }],\n      'gender': ''\n    };\n    this.rdvChild = {\n      \"start\": \"\"\n    };\n  }\n\n  changeNameWithRdv(patient, rdv) {\n    this.patientChild = patient;\n    this.rdvChild = rdv;\n    console.log(\"rdv\");\n  }\n\n  changeName(patient) {\n    this.patientChild = patient;\n    this.rdvChild = {\n      \"start\": \"\"\n    };\n    console.log(\"sans rdv\");\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.patientService.getPatient().subscribe(element => {\n        _this.patients.push(element);\n\n        _this.patients.push(_this.otherPatient);\n      });\n      yield _this.rendezVousService.getRDV().subscribe(element => {\n        element.forEach(elem => {\n          elem.start = new Date(elem.start).toLocaleDateString(\"fr\").toString();\n        });\n        _this.patients[0].rdv = element;\n        _this.patients[1].rdv = [];\n      });\n    })();\n  }\n\n  search(filterValue, values) {\n    this.patients.filter(val => {\n      return val.name.family.toLowerCase().indexOf(filterValue) > -1;\n    });\n  }\n\n};\n\n__decorate([Input()], ComponentListPatientComponent.prototype, \"patientChild\", void 0);\n\n__decorate([Input()], ComponentListPatientComponent.prototype, \"rdvChild\", void 0);\n\nComponentListPatientComponent = __decorate([Component({\n  selector: 'app-component-list-patient',\n  templateUrl: './component-list-patient.component.html',\n  styleUrls: ['./component-list-patient.component.css']\n})], ComponentListPatientComponent);\nexport { ComponentListPatientComponent };","map":{"version":3,"mappings":";;AAAA,SAASA,SAAT,EAAoBC,KAApB,QAAyC,eAAzC;AAUA,IAAaC,6BAA6B,GAA1C,MAAaA,6BAAb,CAA0C;EA+DxCC,YAAoBC,cAApB,EAA4DC,iBAA5D,EAAgG;IAA5E;IAAwC;IA7D5D,gBAAmB,EAAnB;IACA,WAAc,EAAd;IAEA,oBAAe;MACb,MAAO,0BADM;MAEb,UAAW,IAFE;MAGb,QAAS,CAAC;QACR,UAAW,QADH;QAER,SAAU,CAAC,QAAD;MAFF,CAAD,CAHI;MAOb,WAAW,CACT;QACI,OAAO,MADX;QAEI,QAAQ,CACJ,2BADI,CAFZ;QAKI,QAAQ,OALZ;QAMI,WAAW;MANf,CADS,CAPE;MAiBb,UAAW;IAjBE,CAAf;IAuBA,oBAAe;MACb,MAAO,EADM;MAEb,UAAW,IAFE;MAGb,QAAS,CAAC;QACR,UAAW,EADH;QAER,SAAU,CAAC,EAAD;MAFF,CAAD,CAHI;MAOb,WAAW,CACT;QACI,OAAO,EADX;QAEI,QAAQ,CACJ,EADI,CAFZ;QAKI,QAAQ,EALZ;QAMI,WAAW;MANf,CADS,CAPE;MAiBb,UAAW;IAjBE,CAAf;IAqBA,gBAAW;MAAC,SAAQ;IAAT,CAAX;EAgBC;;EAdDC,iBAAiB,CAACC,OAAD,EAAgBC,GAAhB,EAAwB;IACvC,KAAKC,YAAL,GAAoBF,OAApB;IACA,KAAKG,QAAL,GAAgBF,GAAhB;IACAG,OAAO,CAACC,GAAR,CAAY,KAAZ;EACD;;EAEDC,UAAU,CAACN,OAAD,EAAc;IACtB,KAAKE,YAAL,GAAoBF,OAApB;IACA,KAAKG,QAAL,GAAgB;MAAC,SAAQ;IAAT,CAAhB;IACAC,OAAO,CAACC,GAAR,CAAY,UAAZ;EACD;;EAMKE,QAAQ;IAAA;;IAAA;MACX,MAAM,KAAI,CAACV,cAAL,CAAoBW,UAApB,GAAiCC,SAAjC,CAA2CC,OAAO,IAAE;QACzD,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmBF,OAAnB;;QACA,KAAI,CAACC,QAAL,CAAcC,IAAd,CAAmB,KAAI,CAACC,YAAxB;MAED,CAJM,CAAN;MAMF,MAAM,KAAI,CAACf,iBAAL,CAAuBgB,MAAvB,GAAgCL,SAAhC,CAA0CC,OAAO,IAAE;QACtDA,OAAO,CAACK,OAAR,CAAiBC,IAAD,IAAe;UAC7BA,IAAI,CAACC,KAAL,GAAa,IAAIC,IAAJ,CAASF,IAAI,CAACC,KAAd,EAAqBE,kBAArB,CAAwC,IAAxC,EAA8CC,QAA9C,EAAb;QACD,CAFD;QAIA,KAAI,CAACT,QAAL,CAAc,CAAd,EAAiBV,GAAjB,GAAuBS,OAAvB;QACA,KAAI,CAACC,QAAL,CAAc,CAAd,EAAiBV,GAAjB,GAAuB,EAAvB;MACD,CAPI,CAAN;IAPa;EAgBb;;EAEDoB,MAAM,CAACC,WAAD,EAAuBC,MAAvB,EAAmC;IACvC,KAAKZ,QAAL,CAAca,MAAd,CAAsBC,GAAD,IAAa;MAChC,OAAOA,GAAG,CAACC,IAAJ,CAASC,MAAT,CAAgBC,WAAhB,GAA8BC,OAA9B,CAAsCP,WAAtC,IAAqD,CAAC,CAA7D;IACD,CAFD;EAGD;;AAzFuC,CAA1C;;AA4BEQ,YADCpC,KAAK,EACN;;AAqBAoC,YADCpC,KAAK,EACN;;AAjDWC,6BAA6B,eANzCF,SAAS,CAAC;EACTsC,QAAQ,EAAE,4BADD;EAETC,WAAW,EAAE,yCAFJ;EAGTC,SAAS,EAAE,CAAC,wCAAD;AAHF,CAAD,CAMgC,GAA7BtC,6BAA6B,CAA7B;SAAAA","names":["Component","Input","ComponentListPatientComponent","constructor","patientService","rendezVousService","changeNameWithRdv","patient","rdv","patientChild","rdvChild","console","log","changeName","ngOnInit","getPatient","subscribe","element","patients","push","otherPatient","getRDV","forEach","elem","start","Date","toLocaleDateString","toString","search","filterValue","values","filter","val","name","family","toLowerCase","indexOf","__decorate","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["/Users/guevel/ProjectSanglier/src/app/component-list-patient/component-list-patient.component.ts"],"sourcesContent":["import { Component, Input, OnInit } from '@angular/core';\nimport { RendezVousService } from '../service/rendez-vous.service';\nimport { PatientService } from '../service/service-patient.service';\n\n@Component({\n  selector: 'app-component-list-patient',\n  templateUrl: './component-list-patient.component.html',\n  styleUrls: ['./component-list-patient.component.css']\n})\n\nexport class ComponentListPatientComponent implements OnInit {\n\n  patients : any[] = [];\n  rdv : any[] = [];\n\n  otherPatient = {\n    'id' : '632ac2df633beb221b834dd6',\n    'active' : true,\n    'name' : [{\n      'family' : 'DUPONT',\n      'given' : ['Pierre'],\n    }],\n    'address': [\n      {\n          'use': 'home',\n          'line': [\n              '7 rue des petites écuries'\n          ],\n          'city': 'Paris',\n          'country': 'France'\n      }\n  ],\n    'gender' : 'mâle'\n  }\n\n\n\n  @Input() \n  patientChild = {\n    'id' : '',\n    'active' : true,\n    'name' : [{\n      'family' : '',\n      'given' : [''],\n    }],\n    'address': [\n      {\n          'use': '',\n          'line': [\n              ''\n          ],\n          'city': '',\n          'country': ''\n      }\n  ],\n    'gender' : ''\n  }\n\n  @Input() \n  rdvChild = {\"start\":\"\"}\n\n  changeNameWithRdv(patient : any, rdv :any): void {\n    this.patientChild = patient;\n    this.rdvChild = rdv;\n    console.log(\"rdv\")\n  }\n\n  changeName(patient : any): void {\n    this.patientChild = patient;\n    this.rdvChild = {\"start\":\"\"};\n    console.log(\"sans rdv\")\n  }\n\n  constructor(private patientService: PatientService, private rendezVousService: RendezVousService) {\n\n  }\n\n  async ngOnInit(): Promise<void> {\n     await this.patientService.getPatient().subscribe(element=>{\n      this.patients.push(element);\n      this.patients.push(this.otherPatient)\n\n    });\n\n   await this.rendezVousService.getRDV().subscribe(element=>{\n      element.forEach((elem : any) => {\n        elem.start = new Date(elem.start).toLocaleDateString(\"fr\").toString();\n      })\n    \n      this.patients[0].rdv = element;\n      this.patients[1].rdv = [];\n    });\n\n  }\n\n  search(filterValue : string, values : any): void {\n    this.patients.filter((val: any) => {\n      return val.name.family.toLowerCase().indexOf(filterValue) > -1;\n    });\n  }\n}"]},"metadata":{},"sourceType":"module"}