{"ast":null,"code":"import _asyncToGenerator from \"/Users/guevel/ProjectSanglier/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../service/service-patient.service\";\nimport * as i2 from \"../service/rendez-vous.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/button\";\nimport * as i6 from \"../component-detail/component-detail.component\";\n\nfunction ComponentListPatientComponent_li_9_li_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ComponentListPatientComponent_li_9_li_4_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const rdv_r3 = restoredCtx.$implicit;\n      const patient_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.changeNameWithRdv(patient_r1, rdv_r3));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const rdv_r3 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(rdv_r3.start);\n  }\n}\n\nfunction ComponentListPatientComponent_li_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\")(1, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ComponentListPatientComponent_li_9_Template_button_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r8);\n      const patient_r1 = restoredCtx.$implicit;\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.changeName(patient_r1));\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ul\");\n    i0.ɵɵtemplate(4, ComponentListPatientComponent_li_9_li_4_Template, 3, 1, \"li\", 5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const patient_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", patient_r1.name[0].family + \" \" + patient_r1.name[0].given, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", patient_r1.rdv);\n  }\n}\n\nexport class ComponentListPatientComponent {\n  constructor(patientService, rendezVousService) {\n    this.patientService = patientService;\n    this.rendezVousService = rendezVousService;\n    this.patients = [];\n    this.rdv = [];\n    this.otherPatient = {\n      'id': '632ac2df633beb221b834dd6',\n      'active': true,\n      'name': [{\n        'family': 'DUPONT',\n        'given': ['Pierre']\n      }],\n      'address': [{\n        'use': 'home',\n        'line': ['7 rue des petites écuries'],\n        'city': 'Paris',\n        'country': 'France'\n      }],\n      'gender': 'mâle'\n    };\n    this.patientChild = {\n      'id': '',\n      'active': true,\n      'name': [{\n        'family': '',\n        'given': ['']\n      }],\n      'address': [{\n        'use': '',\n        'line': [''],\n        'city': '',\n        'country': ''\n      }],\n      'gender': ''\n    };\n    this.rdvChild = {\n      \"start\": \"\"\n    };\n    this.patientFilter = [];\n    this.elementFilter = '';\n  }\n\n  changeNameWithRdv(patient, rdv) {\n    this.patientChild = patient;\n    this.rdvChild = rdv;\n    console.log(\"rdv\");\n  }\n\n  changeName(patient) {\n    this.patientChild = patient;\n    this.rdvChild = {\n      \"start\": \"\"\n    };\n    console.log(\"sans rdv\");\n  }\n\n  applyFilter(event) {\n    const filterValue = event.target.value;\n    this.patientFilter.forEach(val => {\n      this.elementFilter = filterValue.trim().toLowerCase();\n    });\n  }\n\n  ngOnInit() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this.patientService.getPatient().subscribe(element => {\n        _this.patients.push(element);\n\n        _this.patients.push(_this.otherPatient);\n\n        _this.patientFilter.push(element.name[0].family + element.name[0].given);\n\n        _this.patientFilter.push(_this.otherPatient.name[0].family + _this.otherPatient.name[0].given);\n      });\n      yield _this.rendezVousService.getRDV().subscribe(element => {\n        element.forEach(elem => {\n          elem.start = new Date(elem.start).toLocaleDateString(\"fr\").toString();\n        });\n        _this.patients[0].rdv = element;\n        _this.patients[1].rdv = [];\n      });\n    })();\n  }\n\n}\n\nComponentListPatientComponent.ɵfac = function ComponentListPatientComponent_Factory(t) {\n  return new (t || ComponentListPatientComponent)(i0.ɵɵdirectiveInject(i1.PatientService), i0.ɵɵdirectiveInject(i2.RendezVousService));\n};\n\nComponentListPatientComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ComponentListPatientComponent,\n  selectors: [[\"app-component-list-patient\"]],\n  inputs: {\n    patientChild: \"patientChild\",\n    rdvChild: \"rdvChild\"\n  },\n  decls: 12,\n  vars: 3,\n  consts: [[1, \"entete\"], [\"noshade\", \"\", 2, \"width\", \"300px\", \"background-color\", \"black\", \"text-align\", \"left\", \"border\", \"1px solid black\"], [1, \"list-patient\"], [1, \"component\"], [1, \"list\"], [4, \"ngFor\", \"ngForOf\"], [1, \"detail\"], [3, \"patientChild\", \"rdvChild\"], [\"mat-button\", \"\", 3, \"click\"]],\n  template: function ComponentListPatientComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\")(2, \"mat-label\");\n      i0.ɵɵtext(3, \"Dr Le Sanglier\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(4, \"hr\", 1);\n      i0.ɵɵelementStart(5, \"div\", 2)(6, \"div\", 3)(7, \"div\", 4)(8, \"ul\");\n      i0.ɵɵtemplate(9, ComponentListPatientComponent_li_9_Template, 5, 2, \"li\", 5);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"div\", 6);\n      i0.ɵɵelement(11, \"app-component-detail\", 7);\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(9);\n      i0.ɵɵproperty(\"ngForOf\", ctx.patients);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"patientChild\", ctx.patientChild)(\"rdvChild\", ctx.rdvChild);\n    }\n  },\n  dependencies: [i3.NgForOf, i4.MatLabel, i5.MatButton, i6.ComponentDetailComponent],\n  styles: [\".action[_ngcontent-%COMP%] {\\n    margin-left: 1%;\\n    display: flex !important;\\n\\n}\\n\\n.search[_ngcontent-%COMP%] {\\n    margin-top: 0.5%;\\n}\\n\\n.component[_ngcontent-%COMP%] {\\n    display: flex !important;\\n}\\n\\n.list[_ngcontent-%COMP%] {\\n    margin-right: 5%;\\n    margin-left: 2%;\\n}\\n\\n.detail[_ngcontent-%COMP%] {\\n    margin-left: 13%;\\n}\\n\\n.list-patient[_ngcontent-%COMP%] {\\n    font-size: 15px;\\n}\\n\\n.entete[_ngcontent-%COMP%] {\\n    text-align: center;\\n    margin-top: 2%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudC1saXN0LXBhdGllbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGVBQWU7SUFDZix3QkFBd0I7O0FBRTVCOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksd0JBQXdCO0FBQzVCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGNBQWM7QUFDbEIiLCJmaWxlIjoiY29tcG9uZW50LWxpc3QtcGF0aWVudC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFjdGlvbiB7XG4gICAgbWFyZ2luLWxlZnQ6IDElO1xuICAgIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcblxufVxuXG4uc2VhcmNoIHtcbiAgICBtYXJnaW4tdG9wOiAwLjUlO1xufVxuXG4uY29tcG9uZW50IHtcbiAgICBkaXNwbGF5OiBmbGV4ICFpbXBvcnRhbnQ7XG59XG5cbi5saXN0IHtcbiAgICBtYXJnaW4tcmlnaHQ6IDUlO1xuICAgIG1hcmdpbi1sZWZ0OiAyJTtcbn1cblxuLmRldGFpbCB7XG4gICAgbWFyZ2luLWxlZnQ6IDEzJTtcbn1cblxuLmxpc3QtcGF0aWVudCB7XG4gICAgZm9udC1zaXplOiAxNXB4O1xufVxuXG4uZW50ZXRlIHtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgbWFyZ2luLXRvcDogMiU7XG59Il19 */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ComponentListPatientComponent","constructor","patientService","rendezVousService","changeNameWithRdv","patient","rdv","patientChild","rdvChild","console","log","changeName","applyFilter","event","filterValue","target","value","patientFilter","forEach","val","elementFilter","trim","toLowerCase","ngOnInit","getPatient","subscribe","element","patients","push","otherPatient","name","family","given","getRDV","elem","start","Date","toLocaleDateString","toString","selectors","inputs","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/guevel/ProjectSanglier/src/app/component-list-patient/component-list-patient.component.html","/Users/guevel/ProjectSanglier/src/app/component-list-patient/component-list-patient.component.ts"],"sourcesContent":["<div class=\"entete\">\n    <h1>\n        <mat-label>Dr Le Sanglier</mat-label>\n    </h1>\n</div>\n\n<hr noshade style=\"width:300px; background-color:black; text-align:left; border:1px solid black;\">\n\n<div class=\"list-patient\">\n\n    <div class=\"component\">\n\n        <div class=\"list\">\n\n            <ul> \n                <li *ngFor=\"let patient of patients\">\n                    <button mat-button (click)=\"changeName(patient)\"> {{patient.name[0].family + ' ' +  patient.name[0].given}}</button>\n                    <ul>\n                        <li *ngFor=\"let rdv of patient.rdv\">\n                            <button mat-button (click)=\"changeNameWithRdv(patient, rdv)\">{{rdv.start}}</button>\n                        </li>           \n                    </ul> \n                </li>\n              </ul>\n\n\n        </div>\n\n        <div class=\"detail\">\n            <app-component-detail [patientChild]=patientChild [rdvChild]=rdvChild></app-component-detail>\n        </div>\n    </div>\n</div>","import { Component, Input, OnInit } from '@angular/core';\nimport { RendezVousService } from '../service/rendez-vous.service';\nimport { PatientService } from '../service/service-patient.service';\n\n@Component({\n  selector: 'app-component-list-patient',\n  templateUrl: './component-list-patient.component.html',\n  styleUrls: ['./component-list-patient.component.css']\n})\n\nexport class ComponentListPatientComponent implements OnInit {\n\n  patients : any[] = [];\n  rdv : any[] = [];\n\n  otherPatient = {\n    'id' : '632ac2df633beb221b834dd6',\n    'active' : true,\n    'name' : [{\n      'family' : 'DUPONT',\n      'given' : ['Pierre'],\n    }],\n    'address': [\n      {\n          'use': 'home',\n          'line': [\n              '7 rue des petites écuries'\n          ],\n          'city': 'Paris',\n          'country': 'France'\n      }\n  ],\n    'gender' : 'mâle'\n  }\n\n\n\n  @Input() \n  patientChild = {\n    'id' : '',\n    'active' : true,\n    'name' : [{\n      'family' : '',\n      'given' : [''],\n    }],\n    'address': [\n      {\n          'use': '',\n          'line': [\n              ''\n          ],\n          'city': '',\n          'country': ''\n      }\n  ],\n    'gender' : ''\n  }\n\n  @Input() \n  rdvChild = {\"start\":\"\"}\n\n  changeNameWithRdv(patient : any, rdv :any): void {\n    this.patientChild = patient;\n    this.rdvChild = rdv;\n    console.log(\"rdv\")\n  }\n\n  changeName(patient : any): void {\n    this.patientChild = patient;\n    this.rdvChild = {\"start\":\"\"};\n    console.log(\"sans rdv\")\n  }\n\n  constructor(private patientService: PatientService, private rendezVousService: RendezVousService) {\n\n  }\n\n  patientFilter : string [] = []\n\n  elementFilter : string = ''\n\n  applyFilter(event: Event) {\n    const filterValue = (event.target as HTMLInputElement).value;\n    this.patientFilter.forEach(val => {\n      this.elementFilter = filterValue.trim().toLowerCase();\n    }) \n}\n\n  async ngOnInit(): Promise<void> {\n     await this.patientService.getPatient().subscribe(element=>{\n      this.patients.push(element);\n      this.patients.push(this.otherPatient)\n      this.patientFilter.push(element.name[0].family +  element.name[0].given)\n      this.patientFilter.push(this.otherPatient.name[0].family + this.otherPatient.name[0].given)\n\n\n    });\n\n   await this.rendezVousService.getRDV().subscribe(element=>{\n      element.forEach((elem : any) => {\n        elem.start = new Date(elem.start).toLocaleDateString(\"fr\").toString();\n      })\n    \n      this.patients[0].rdv = element;\n      this.patients[1].rdv = [];\n    });\n\n  }\n}"]},"metadata":{},"sourceType":"module"}